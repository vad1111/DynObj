процесс обучение
простейший вариант
агент получил сообщение- отправил сообщение

макросы "наблюдение за чужими действиями"  -это уже цель агента
следить, записывать, искать повторения 
наблюдение - запоминается контекст ( один из критеририев время суток, утро, вечер), прога с которой работает человек
		и 1 вводимые команды, 2 изменения окружения
		человек оболчке -(запустить процесс Х)	+1 сек (появление процесса Х в списке процессов)

		копирование этого действия - запуск этой программы ( я оболчке (запустить процесс Х)),
		ожидание(+1 сек) появление процесса в списке  
		, подтверждение ожидания , запоминание- создание нового навыка
		свои действия тоже запоминаются наблюдателем.

		любое действие приводит к изменениям в некотором окружении
		внутрение команды внутри процеса не видны для сторонней программы, на рбочем столе видно
		Т.е. наблюдение это сбор информации о доступном окружении.


 общение с прогой квиком, надо знать его текущее состояние. Запущен, загружает окна, ожидает ввода
 Луа соединен, передает пропущенные данные (не принимает сообщения)






 запуск действия  началоЗапуска= начальное состояние, текущее действие, текущее состояние (доступ к переменным)
	переменные, номер выполняемой строки или имя строки, каждая строка это имя команды и параметры
	номер строки это процент вычисления
	конечное состояние 

каждое дествие имеет ожидание времени выполнения
событие это смена состояния выполнения.
Есть состояние выполнения и состояние объекта
состояние выполнения : ожидание, начало действия, середина действия, завершение дейсвия.

Распознование ситуации = сравнение старого состояния и нового. Текущий скрин и предыдущий
текущее дерево и старое Старое (время, набор переменных)
Непрерывность ( время+интервал, переменая+изменение)  изменение пропорционально интервалу

Снимки состояния 
+1, пер= 10
+2, пер = 11
+3, пер = 13 
+4, пер = 12
изменение перменной это событие изменения состояния
Глубина запоминания, интервал, частота опроса 
пропуск запоминаний если нет изменений или групирование их шаблон постоянства "состояние"+н

последовательности снимков могут повторяться
потому наборы снимков сохраняются и классифицируются, из них формируются более сложные шаблоны
Возможны два сценария
	1. формирование новых шаблонов, если список шаблонов пуст.
	2. Ожидание уже сущесвующих. выявление, поиск старых шаблонов 

	Набор ожидаемых шаблонов это предсказание ситуации
	возможно конструриование новых шаблонов - сооздание вооброжаемой модели 
	Напимер есть начальное воображаемое состояние и конечное вооброж- дальше ищется набор промежуточных переходов 
															 
	  Также как снимки разбиваются интервалами
	  прострасво переменых также мжно делить группы 
	  Напрмер изображение разделить на квадраты,
	  но во временых снимках интерпритация 5 в окружениях 10-5-10 и 33-5-33 может быть разным
	  это как слова "мыла" или глагол или существительное, 5 это "мыла"

	Печать изображения и рисование красками дает похожий результат, но нет смысла копировать действия человека
	Также нет смысла учить машину писать программы в виде текста

переменные в снимках состоянии можно считать активностями- рецепторами	 - они подают сигналы уже
дальше где их ждут все возможные шаблоны или выявитель шаблонов.
С Искуств нейронами каждый рецептор связан со следующим уровнем группы нейронов 
В ходе обучения на рецпторы подаются образы на выходе ожидаемый результат и вычисляются веса
т.е. получается аналог поиска пути от начального состояния к конечному состоянию
точнее неправильно: начальное и коонечное состояние в вычислении пути - это тоже пространство состояний	 
ттолько с разным временем.
в поиске шаблона (нейронах)	 пространство рецепторов и пространство шаблонов разное.
в обычных перцепторнах присутствует только сложение  возбуждение, а торможение должно содержать вычитание
еще должны быть нероны Максимум (ИЛИ) и Минимум (и) 

Выявление шаблона это минимизация данных состояния, Например разбивка на интервалы.Можно разбить текст на
интервалы по 3-4 символа , и выявить их количество , их будет намного меньше.
Если ввести иные критерии, формировать группы выделяя слова между пробелами, будет еще меньше, 
разбивка на слоги еще меньше.


Выявление проопусков позвооляет следить за объектом, с учетоом смещения или поворота.
нейроны	 2 слоя уменьшают разрешение, складывая , усредняя соседние пиксели
на графике разбивка на 3 свечи позволяет выявить продолжение или разворот, но разбивка идет на каждой новой
свече, т.е. на 2 слое количество нейронов не уменьшается. 
они заменяются на вверх. вниз, разворот вврх. разворот вниз. 
на следущем слое уже можно умеьшить объедиив последовательные "вверх"  в группы +н
но заранее их количество неивестно.  есть 2 шаблона - ожидания продолжения и разворота 
выбор шаблона это уже развилка, можно пойти налево или направо
Обучение это натаптывание дорожек. Т.е. при обучении слдующий слой содержит весь набор шаблонов,
но после обучения остается только один. И тут процесс обучения должен быть похож на 
универсальныый механизм	 выбора. с проверкой результата. коррекцией 
Список выбора несколько вариантов шаблонов 
Усреднив по интервалу, можно увидеть картину более обще издалека, 


	 Обучение нейройной сети - это построение модели объекта - (скрытые слои)
	 с учителем есть набор входных примеров и ожидаемых выходных, 
	 можно их тупо запомнить и выдавать по запросу
	 но можно найти вычислимую модель, которая сократит размер хранимых данных. 
	 Далее это построение апроксимация + возможная экстраполяция. Но это для мат формул подоходит
	 а для поиска дороги нифига