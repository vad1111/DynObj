using System.Collections.Generic;
using Динамические.Примитивы;

namespace Динамические.активности
{
    public class ПСтрока : Псевдоактивности
    {
        public static List<Псевдоактивности> КодыИзображенийЮНИКОД;
        public static List<Псевдоактивности>  Буквы;
        public static List<Псевдоактивности> Алфавиты;
        static ПСтрока()
        {
            var _РускийАлфавит = new List<char>();
            
            for (var с = 'а'; с <= 'е'; с++) { _РускийАлфавит.Add(с);  }
            _РускийАлфавит.Add('ё');
            for (var с = 'ж'; с <= 'я'; с++)   { _РускийАлфавит.Add(с); }

            var  русскийалфавит = new Псевдоактивности();
            var  кодыюникода = new ПСтрока("Коды ЮНИКОДа");   // на впрос что это? должно быть код Юникода


            for (var и = 0; и < _РускийАлфавит.Count; и++)
            {
                var  новаябуква = new Псевдоактивности();
                новаябуква.СписокСвязей.Add(new СтацСвязь
                                           {СобствПА =новаябуква, Направление = ТиНапрвления.Входящая, Тип = ТипСвязи.ЧленРяда});

                русскийалфавит.ДобавитьСвязьС(новаябуква, ТиНапрвления.Двусторонняя, ТипСвязи.Перечисление);
                Буквы.Add(новаябуква);

                var  новыйкод = new Псевдоактивности();
                новыйкод.Значение = _РускийАлфавит[и];
                кодыюникода.ДобавитьЧленПеречисления(новыйкод);

                КодыИзображенийЮНИКОД.Add(новыйкод);
                новыйкод.ДобавитьСвязьС(новаябуква, ТиНапрвления.Двусторонняя, ТипСвязи.Соответствие);


            }
           
            //    большая = с.ToString().ToUpper()[0];
           
        }

        public static СтацСвязь НайтиПАБуквы(char символ)
        {
            var ПАКод = КодыИзображенийЮНИКОД.Find(па => ((char) па.Значение) == символ);
            var буква = ПАКод.СписокСвязей[0].УдаленнаяАктивность;
            return буква.СписокСвязей.Find(св => св.Направление == ТиНапрвления.Входящая);
        }
        public ПСтрока(string строка)
        {
            foreach (var буква in строка)
            {
                var адресПБуква = НайтиПАБуквы(буква); // найти букву, по коду буквы можно вычислить алфавит
                // где искать эти алфавиты
                // как искать в алфавите. Алфавиты у нас это список кодов изображений некаая ПА по которой
                // просмотреть все связи и найти адрес связи нужной ПА буквы
                // руская буква имеет два адресных пространства русского алфавита и кодов изображений

                // у буквы должна (может) быть одна связь на все слова  со входящей напр (один ко многим)
                // возможно для рядов так и должно быть всегда 

                СписокСвязей.Add(new СтацСвязь()
                                {
                                    УдаленнаяСвязь = адресПБуква, СобствПА = this,Тип = ТипСвязи.Ряд     ,
                                    Направление = ТиНапрвления.Исходящая
                                });
                // от буквы тоже будет связь, кадая буква будет повторяться столько раз 
                // для одностороннней возможно обратную связь не нужно создавать
                // тогда входящих существовать не будет
                //ДобавитьСвязьС(адресПБуква, ТиНапрвления.Двусторонняя, ТипСвязи.Ряд);
                // СписокСвязей может выдавать виртуальные связи эмитации связей
                // храним string=список кодов, а когда надо выдаем временную связь
                // связь здесь играет роль проксиБуквы, то что 
            }
        }
    }
}