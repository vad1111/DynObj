using System;
using System.Threading;
using System.Windows.Interop;
using Динамические;

namespace Динамические2.активности
{
    public class МодельКанала
    {
        public РАМОбъект Конец1;
        public СписокБайт ВходящийБуфер1;

        public void Передай12(СписокБайт байты)
        {
            ВходящийБуфер2 = байты;

        }

        public РАМОбъект Конец2;
        public СписокБайт ВходящийБуфер2;

        public void Передай21(СписокБайт байты)
        {
            ВходящийБуфер1 = байты;
        }
    }

    // Модель реального Канала. Скорость считывания не установлена, размер буфера любой.
    //Реальная сетевая карта имеет фиксированый размер
    // данные будут перезапиываться поверх независимо от того выбраны предыдущие или нет
    // можно организовать не перезаписование данных а добавление в конецПотока

    public class МодельКанала2
    {
        private TimeSpan интервалЗадержки= TimeSpan.FromTicks(1);
        public bool ПоддерживаетПрерывание { get; }
        public Связь Связь1;  //это для прерывания

        РАМОбъект буфер1;
        public РАМОбъект Конец1
        {
            get =>  буфер1;
            set {
                Thread.Sleep(интервалЗадержки);   //эмитация физической передачи
                буфер2 = value;
                Связь2?.СигналОПоступленииСообщения?.Invoke();
                value = null;                //переменная обнуляется уходит 
            }
        }
        public Связь Связь2;

        РАМОбъект буфер2;
       

        public РАМОбъект Конец2
        {
            get => буфер2;
            set
            {
                Thread.Sleep(интервалЗадержки);   //эмитация физической передачи
                буфер1 = value;
                Связь1?.СигналОПоступленииСообщения?.Invoke();

            }
        }
    }
}