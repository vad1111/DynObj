using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Динамические.Группы
{
    //ПростейшийПеревод Таблица соответствия 
    // это вариант общей трансформации преобразования одного типа в другой например словаря объектов в экземпляр C#  и обратно
    //это частный случай Словаря 
    public class Перевод
    {
        public ГруппаТипизированная СписокРуский = new ГруппаТипизированная() {ТипХранящихсяОбъектов = typeof(Строка)}; // это может быть адрес словаря общий + список адресов из этого словаря, тогда этот класс будет контекстом перевода, таких контекстов может быть несколько
                                                   // только слово не знает о контекстах , можно поместить набор ссылок на такие контексты в само слово, получим все варианты
        public ГруппаТипизированная СписокАнглийский = new ГруппаТипизированная() { ТипХранящихсяОбъектов = typeof(Строка) };

        public Строка ДайРусский(Строка словоАнг)
        {
            var номер =
                СписокАнглийский.Список.FindIndex(слово => ((Строка) слово).Значение == словоАнг.Значение);
            if (номер > 0) return (Строка) СписокРуский[номер];
            return null;
        }
        public Строка ДайАнглийский(Строка словоРус)
        {
            var номер =
                СписокРуский.Список.FindIndex(слово => ((Строка)слово).Значение == словоРус.Значение);
            if (номер > 0) return (Строка)СписокАнглийский[номер];
            return null;
        }

        public void ДобавитьПару(Строка русское, Строка английское)
        {
            СписокРуский.Список.Add(русское);
            СписокАнглийский.Список.Add(английское);
        }

    }

    // тоже перевод - одного типа в другой 
    public class СтрокаString
    {
        public string Вstring( Строка строка)
        {
            return строка.Значение;
        }
        public Строка ВСтроку(string изString)
        {
            return new Строка(изString);
        }
    }



}
