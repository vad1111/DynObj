using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Динамические
{
    // Это объекты связанные не жостко, удаленно
    public class МягкаяСвязь
    {
        public ПримитивИлиАдрес ИмяСвязи; //
        public Адрес АдресОбъекта; // 

    }

    public class ГруппаОбщая : Примитив
    {
        public Адрес СобственныйАдрес;
        public List<МягкаяСвязь> ПрямыеСвязи; //Члены группы имеют ссылки на группу. Члены группы знают о группе
        public List<МягкаяСвязь> СписокОбратныхСвязей;

        public void ДобавитПрямуюСвязь(МягкаяСвязь новаяСвязь, ПримитивИлиАдрес имяОбранойСвязи)
        {
            ПрямыеСвязи.Add(новаяСвязь);
            dynamic объектПрямойСвязи = новаяСвязь.АдресОбъекта.АдресВКуче();
            объектПрямойСвязи.ДобавитьОбратнуюСвязь(new МягкаяСвязь() {АдресОбъекта = СобственныйАдрес, ИмяСвязи = имяОбранойСвязи});
        }
        public void СообщитьПодписчикамОбИзмененииСобственногоАдреса( Адрес новыйАдрес)
        {
            foreach (var связь in СписокОбратныхСвязей)
            {
                dynamic объектОбратнойСвязи = связь.АдресОбъекта.АдресВКуче();
                объектОбратнойСвязи.ИзменитьАдресПрямойСвязи(СобственныйАдрес, новыйАдрес);
            }
            // в случае успеха 
            СобственныйАдрес = новыйАдрес;
        }

 //сообщения от объектов прямой связи
        // Адрес Объекта прямой связи изменился, необходимо внести изменения в существующую связь
        //объект переехал
        public void ИзменитьАдресПрямойСвязи(Адрес старыйАдрес, Адрес новыйАдрес)
        {
            var стараяСвязь = ПрямыеСвязи.Find(связь => связь.АдресОбъекта == старыйАдрес); 
            if (стараяСвязь!=null)
            {стараяСвязь.АдресОбъекта = новыйАдрес;}
            else //ошибка - несущесствующаясвязь
            {
                //передатьсообщение объекту по старому адресу  удалить обратную связь
                dynamic объектПоСтаромуАдресу = старыйАдрес.АдресВКуче();
                объектПоСтаромуАдресу.УдалитьСвязьИзСпискаОбратныхСвязей(СобственныйАдрес);
            }
        }

 //сообщения от объектов обратной связи
        //объект обратной связи разрывает связь 
        public void УдалитьСвязьИзСпискаОбратныхСвязей( Адрес удаляемыйАдрес)
        {
            ; // найти связь в СпискеОбратныхСвязей
            var удаляемаясвязь = СписокОбратныхСвязей.Find(связь => связь.АдресОбъекта == удаляемыйАдрес);
            СписокОбратныхСвязей.Remove(удаляемаясвязь);
        }

        public void ДобавитьОбратнуюСвязь(МягкаяСвязь новаяобратнаяСвязь)
        {
            if ( ! СписокОбратныхСвязей.Exists(связь => связь.Equals(новаяобратнаяСвязь))) 
                СписокОбратныхСвязей.Add(новаяобратнаяСвязь);
        }
    }


}
