using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Динамические
{
    public class Канал: ПримитивИлиАдрес
    {
        public Связь Связь;
        public int РазмерВходногоБуфера; // сюда надо привязать набор правил 
        public int РазмерВыходногоБуфера; // удаленного скорее всего 
        public bool ПоддерживаетПрерывание { get; }

        // Хранит ИсходящиеУСебя да(копирует при передаче/перемещает при передаче), 
        //                          собщает забери/ не сообщает забери
        //                      нет 
        //Хранит ВходящиеУсебя да (оставляет и (уходит, 
        //                                   вызывает прерывание(в текущем или новом потоке), 
        //                                   прерывает ожидание сообщения
        //                      нет (сразу передает в связь или в активность)
        // Имеет открытые буферы Входящих/Исходящих
        // Имеет открытые методы обработки Вхоящих/Исходящих
        // Использует регистратора скрвыющего структуру удаленного канала 

        public virtual bool СоединениеУстановлено { get;  set; }
        public virtual int ВремяОжиданияПриема { get; set; }
        public virtual Адрес АдресУдаленнойСвязи { get { return Связь.АдресУдаленнойСвязи; } }
        public Адрес АдресСобственный => Связь.АдресСобственный;
        public virtual void Стоп()
        {
            
        }
        public virtual bool УстановитьСвязь()
        {
            return false;
        }
        public virtual void Регистрация()
        {
            
        }
        public virtual int ДоступноБайт()
        {
            return 0;
        }
        public virtual void ОжидатьПодключение() { }
        //это только для удаленного канала
        public Action<ПримитивИлиАдрес> Получи;
        public Func<ПримитивИлиАдрес> ДайВходящее;
        // это только от связи
        public Action<ПримитивИлиАдрес> ПередайИсходящееСообщение;
      
        public virtual ПримитивИлиАдрес ДайВходящееСообщение()
        {
            return null;
        }
    }
}
