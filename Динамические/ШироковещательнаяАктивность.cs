using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Динамические
{
    public class ШироковещательнаяАктивность : Активность //с использованием чужого процессора = синхронный вызов, вызывающий ждет пока закончиться обработка сообщения 
    {
        // СписокВходящих = null

        public bool Подписаться(Адрес адресПодписчика) // добавить в список связей новую связь с типом связи (роль= подписчик, тип =исходящий, инициатива- активная или пассивная  
                                                        // , связь создается в зависимости от адреса, роли, типа )
        {
            
            return true;
        }

        // добавить исходящие 
        public override void ПолучиСообщение(Связь связь, ПримитивИлиАдрес сообщение)
        {
            var сообщВнутр = сообщение as Сообщение;
            int последний = СписокКомуОтдать.Список.Count;

            var адресСвязи = ((АдресВАктивности) связь.СобственныйАдресПримитива).номер;

            //Исключение эффекта эха 
            for (int i = 0; i < адресСвязи; i++)
            {
                ((Связь)СписокКомуОтдать.Список[i]).ПередайСообщение(сообщВнутр);
            }
            for (int i = адресСвязи+1; i < последний; i++)
            {
                ((Связь)СписокКомуОтдать.Список[i]).ПередайСообщение(сообщВнутр);
            }
        }

        
    }
}
